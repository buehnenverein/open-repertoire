# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the release branch
  push:
    branches:
      - release
      - release-v2

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Build and deploy release
        run: |
          cp -r ./* release-deploy
        if: github.ref == 'refs/heads/release'

      - name: Build and deploy release-v2
        run: |
          cp -r ./* release-v2-deploy
        if: github.ref == 'refs/heads/release-v2'

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: release-deploy
          publish_branch: gh-pages
          keep_files: true
        if: github.ref == 'refs/heads/release'

      - name: Deploy release-v2 to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: release-v2-deploy
          publish_branch: v2
          keep_files: true
        if: github.ref == 'refs/heads/release-v2'
