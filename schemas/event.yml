"$schema": "http://json-schema.org/draft-07/schema#"
"$id": https://buehnenverein.github.io/open-repertoire/event.json
title: Event
definitions:
  CommonEventType:
    type: string
    enum:
      - "Event"

  StringType:
    type: string

  SubEventType:
    type: object
    additionalProperties: false
    required:
      - "@type"
      - name
    properties:
      "@type":
        $ref: "#/definitions/CommonEventType"
      name:
        oneOf:
          - $ref: "#/definitions/StringType"
          - $ref: "./internationalized-string.yml"
        example: 30-minütige Einführung vor der Vorstellung
        description: A descriptive name for this sub-event.
      description:
        oneOf:
          - $ref: "#/definitions/StringType"
          - $ref: "./internationalized-string.yml"
        description: A short description of this sub-event.
      location:
        type: string
        description: A textual description of the location, where this sub-event is taking place, e.g. "Foyer".
        example: Foyer
      startDate:
        type: string
        description: "The start date and time of this sub-event (in ISO 8601 date format)."
        format: date-time
      endDate:
        type: string
        description: "The end date and time of this sub-event (in ISO 8601 date format)."
        format: date-time
      duration:
        type: integer
        format: int64
        description: The duration of the sub-event in minutes.
        example: 30
        minimum: 0
      inLanguage:
          type: array
          description: The language(s) of this sub-event. Should contain BCP 47 Language Tags.
          items:
            type: string
            example: de


  Place:
    type: object
    additionalProperties: false
    required:
      - "@type"
      - address
    properties:
      "@type":
        type: string
        enum:
          - Place
        description: The type of this location object. Must be "Place" for physical locations.
      identifier:
        type: string
        description: A unique ID that can be used to identify this place. This could be an internal database ID, for example.
        example: "835"
      name:
        type: string
        example: brechtbühne im Gaswerk
        description: The location's name
      address:
        $ref: "./postal-address.yml"
      wheelChairPlaces:
        type: object
        description: Describes the presence of reserved spots for wheelchairs in the location, as defined by [a11yjson](https://sozialhelden.github.io/a11yjson/describing-objects/interfaces/#wheelchairplaces).
        $ref: "#/definitions/WheelChairPlace"
      latitude:
        type: number
        description: "The location's latitude."
        minimum: -90
        maximum: 90
      longitude:
        type: number
        description: "The location's longitude."
        minimum: -180
        maximum: 180

  VirtualLocation:
    type: object
    additionalProperties: false
    description: |- 
      If this event is taking place online (or both online and offline), a VirtualLocation specifies how to
      participate in the online event.
    required:
      - "@type"
    properties:
      "@type":
        type: string
        enum:
          - VirtualLocation
        description: The type of this location object. Must be "VirtualLocation" for virtual locations.
      identifier:
        type: string
        description: A unique ID that can be used to identify this virtual location. This could be an internal database ID, for example.
        example: "836"
      name:
        type: string
        description:
          The virtual location's name
        example: Zoom
      url:
        type: string
        format: uri
        description: |-
          The virtual location's URL. This should be the link that is used to participate in the event
          (e.g. a link to join an online meeting) or a link that lets the user sign up to attend the event.
      description:
        type: string
        description: |-
          A description of the virtual location. This field can also be used to provide additional information
          on how to attend this event.
        example: Information on how to join the Online-Event will be provided two days before the event via e-mail.

  WheelChairPlace:
    type: object
    additionalProperties: false
    description: Describes the presence of reserved spots for wheelchairs, as defined by [a11yjson](https://sozialhelden.github.io/a11yjson/describing-objects/interfaces/#wheelchairplaces).
    required:
      - count
    properties:
      count:
        type: integer
        example: 2
        description: The number of designated places for wheelchairs in this location.
      hasSpaceForAssistant:
        type: boolean
        description: Is there additional space for an assistant?
        example: false
      wheelchairUserCapacity:
        type: integer
        description: The number of people using a wheelchair that can be accomodated at the same time. Use this when there is no designated space for wheelchair users, but the number is known.

  Offer:
    type: object
    additionalProperties: false
    required:
      - "@type"
      - priceSpecification
    properties:
      "@type":
        type: string
        enum:
          - "Offer"
      name:
        type: string
        example: Normalpreis
        description: 'A descriptive name for this offer, e.g. "Normalpreis", "Ermäßigt", "Preisgruppe A", usw.'
      availability:
        type: string
        example: InStock
        description: |-
          A string indicating the ticket availability of this offer.
          Right now, only the values `InStock` or `SoldOut` are used.
        enum:
          - InStock
          - SoldOut
      priceSpecification:
        type: object
        required:
          - "@type"
          - minPrice
          - priceCurrency
        properties:
          "@type":
            type: string
            enum:
              - "PriceSpecification"
          minPrice:
            type: number
            description: The minimum price of this offer.
            format: float
            example: 25.50
            minimum: 0
          maxPrice:
            type: number
            description: The maximum price of this offer.
            format: float
            example: 45.50
            minimum: 0
          priceCurrency:
            type: string
            description: "The currency of the price. Use standard formats: TODO"
            example: EUR
      url:
        type: string
        description: Ticketing link for this offer
        format: uri
        example: "https://webshop-tickets.staatstheater-augsburg.de/de/tickets/hedwig-and-the-angry-inch/brechtbuehne-im-gaswerk-14-12-2023-19-30"

  PerformanceRole:
    type: array
    description: |-
      A list of people performing at the event, e.g. actors, dancers, etc.
  
      If multiple people perform the same role on stage (e.g. there is multiple actors
      performing the same character), each person should get their own entry in the `performer` array.
    example:
      - "@type": "PerformanceRole"
        performer:
          - "@type": Person
            name: Max Mustermann
        characterName: Hedwig
      - "@type": "PerformanceRole"
        performer:
          - "@type": Organization
            name: Dÿse
        roleName: Band
    items:
      type: object
      additionalProperties: false
      required:
        - "@type"
        - performer
      properties:
        "@type":
          type: string
          enum:
            - PerformanceRole
        characterName:
          type: string
          description: The name of the character performed on stage, if any.
        roleName:
          type: string
          description: |-
            The role performed or filled by a person or organization.
            If the person or organization is playing a specific character, `characterName` should be used instead.
            Both `characterName` and `roleName` might be specified in some cases. E.g. an opera singer can be said to
            perform "Figaro" (`characterName`) or can be said to sing the "Bass" (`roleName`) voice.  
            Either fields or both fields might be specified, in this case.
        performer:
          type: array
          items:
            $ref: "./agent.yml"

type: object
required:
  - "@type"
  - identifier
  - startDate
additionalProperties: false
properties:
  "@type":
    $ref: "#/definitions/CommonEventType"
  identifier:
    type: string
    description: The unique ID of this event. This could be an internal database ID, for example.
    example: "345"
  dateModified:
    type: string
    description: "Timestamp of when this event entry was last modified"
    format: date-time
  startDate:
    type: string
    description: "The start date and time of the event (in ISO 8601 date format)."
    format: date-time
  endDate:
    type: string
    description: "The end date and time of the event (in ISO 8601 date format)."
    format: date-time
  doorTime:
    type: string
    description: "The time admission will commence."
    format: date-time
  duration:
    type: integer
    format: int64
    description: The duration of the event in minutes.
    example: 90
    minimum: 0
  intermission:
      type: integer
      example: 1
      description: The number of intermissions during this event. Set to 0 or omit this field, if there is no intermission during this event. 
  url:
    type: string
    description: Link to further information about the event
    format: uri
    example: "https://example.com/events/123"
  subtitleLanguage:
    type: array
    description: |-
      Language(s) of the sub-/surtitles for this event, if any. Should use BCP 47 Language Tags.
      This field can also be used to indicate the fact that the event will be translated to/interpreted
      in sign language. In this case, the sign language's language tag should be included in the list of
      `subtitleLanguage`s, e.g. `gsg` for German Sign Language or `ase` for American Sign Language. 
    items:
      type: string
      example: en-US
  
  location:
    description: The location of this event. An event can take place at one or more physical locations,
       one or more virtual locations, or both, if it's a hybrid event.
    type: array
    items:
      oneOf:
        - $ref: "#/definitions/Place"    
        - $ref: "#/definitions/VirtualLocation"    
  performer:
    $ref: "#/definitions/PerformanceRole"
      
  offers:
    type: array
    description: A list of offers for this event, i.e. information about prices, tickets, etc.
    items:
      $ref: "#/definitions/Offer"
  eventType:
    type: array
    description: |-
      A list of values indicating special characteristics of this event:
      * `Premiere`: The first public performance of a theatrical production.
      * `LastShow`: The final performance of a theatrical production at a specific venue.
      * `GuestPerformance`: A performance by a theater company or artist presented at a venue where they are not the resident performers.
      * `Preview`: A public performance of a theatrical production that precede its official opening, e.g. a public rehearsal.
    
    items:
      type: string
      enum:
        - Premiere
        - LastShow
        - GuestPerformance
        - Preview
  eventStatus:
    type: string
    description: |-
      The status of this event.

      - `EventScheduled`: The event is taking place or has taken place on the `startDate` as scheduled. Use of this value is optional, as it is assumed by default.
      - `EventCancelled`: The event has been cancelled. Either `startDate` or `previousStartDate` may be used to specify the event's cancelled date(s).
      - `EventMovedOnline`: Indicates that the event was changed to allow online participation.
      - `EventPostponed`: The event has been postponed and no new date has been set. The event's `previousStartDate` should be set.
      - `EventRescheduled`: The event has been rescheduled. The event's `previousStartDate` should be set to the old date and the `startDate` should be set to the event's new date.
    enum:
      - EventScheduled
      - EventCancelled
      - EventMovedOnline
      - EventPostponed
      - EventRescheduled
  previousStartDate:
    type: string
    description: "This field should contain the old `startDate`, if the `eventStatus` is either `EventPostponed` or `EventRescheduled`"
    format: date-time
  subEvent:
    type: array
    description: |-
      A list of additional events that are part of this event. This field can also be used to include additional offerings
      related to this event. I.e. a panel discussion following the performance/event or an optional introduction before the
      event starts can both be modelled as sub-events.
    items:
      $ref: "#/definitions/SubEventType"
  superEvent:
    $ref: "./super-event.yml"
