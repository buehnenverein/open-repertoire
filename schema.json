{
  "$id": "https://peret.github.io/uc3-openapi/schema.json",
  "required": [
    "@context",
    "organization",
    "productions",
    "version"
  ],
  "additionalProperties": false,
  "type": "object",
  "properties": {
    "@context": {
      "type": "string",
      "enum": [
        "https://schema.org"
      ]
    },
    "version": {
      "type": "string",
      "description": "The API version that is being used. MUST be the string \"v1\" for now.",
      "enum": [
        "v1"
      ]
    },
    "organization": {
      "type": "object",
      "required": [
        "@type",
        "name"
      ],
      "properties": {
        "@type": {
          "type": "string",
          "enum": [
            "Organization"
          ]
        },
        "name": {
          "type": "string",
          "description": "The organization's name"
        },
        "address": {
          "type": "object",
          "additionalProperties": false,
          "required": [
            "@type"
          ],
          "properties": {
            "@type": {
              "type": "string",
              "enum": [
                "PostalAddress"
              ]
            },
            "postalCode": {
              "type": "string",
              "description": "The location's postal code"
            },
            "streetAddress": {
              "type": "string",
              "description": "The location's street address"
            },
            "addressLocality": {
              "type": "string",
              "description": "The city the location is in"
            }
          }
        }
      }
    },
    "productions": {
      "type": "array",
      "description": "The collection of all productions in the repertoire.",
      "items": {
        "type": "object",
        "description": "An object containing unchanging information about the production.",
        "additionalProperties": false,
        "required": [
          "@type",
          "name",
          "events"
        ],
        "properties": {
          "@type": {
            "type": "string",
            "enum": [
              "CreativeWork",
              "Play"
            ]
          },
          "name": {
            "type": "string",
            "description": "The event title"
          },
          "subtitle": {
            "type": "string",
            "description": "The event's optional subtitle"
          },
          "description": {
            "type": "string",
            "description": "A text describing the production"
          },
          "abstract": {
            "type": "string",
            "description": "A short abstract or teaser text describing the production"
          },
          "additionalInfo": {
            "type": "string",
            "description": "Additional information about the production"
          },
          "events": {
            "type": "array",
            "description": "List of current events offered by the organization",
            "items": {
              "type": "object",
              "required": [
                "@type",
                "startDate"
              ],
              "additionalProperties": false,
              "properties": {
                "@type": {
                  "type": "string",
                  "enum": [
                    "Event"
                  ]
                },
                "startDate": {
                  "type": "string",
                  "description": "The start date and time of the event (in ISO 8601 date format).",
                  "format": "date-time"
                },
                "endDate": {
                  "type": "string",
                  "description": "The end date and time of the event (in ISO 8601 date format).",
                  "format": "date-time"
                },
                "duration": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The duration of the event in minutes.",
                  "minimum": 0,
                  "maximum": 9223372036854776000
                },
                "url": {
                  "type": "string",
                  "description": "Link to further information about the event",
                  "format": "uri"
                },
                "location": {
                  "description": "The location of this event. An event can take place at one or more physical locations, one or more virtual locations, or both, if it's a hybrid event.",
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "@type",
                          "address"
                        ],
                        "properties": {
                          "@type": {
                            "type": "string",
                            "enum": [
                              "Place"
                            ],
                            "description": "The type of this location object. Must be \"Place\" for physical locations."
                          },
                          "name": {
                            "type": "string",
                            "description": "The location's name"
                          },
                          "address": {
                            "type": "object",
                            "additionalProperties": false,
                            "required": [
                              "@type"
                            ],
                            "properties": {
                              "@type": {
                                "type": "string",
                                "enum": [
                                  "PostalAddress"
                                ]
                              },
                              "postalCode": {
                                "type": "string",
                                "description": "The location's postal code"
                              },
                              "streetAddress": {
                                "type": "string",
                                "description": "The location's street address"
                              },
                              "addressLocality": {
                                "type": "string",
                                "description": "The city the location is in"
                              }
                            }
                          },
                          "wheelChairPlaces": {
                            "type": "object",
                            "description": "Describes the presence of reserved spots for wheelchairs in the location, as defined by [a11yjson](https://sozialhelden.github.io/a11yjson/describing-objects/interfaces/#wheelchairplaces).",
                            "additionalProperties": false,
                            "required": [
                              "count"
                            ],
                            "properties": {
                              "count": {
                                "type": "integer",
                                "description": "The number of designated places for wheelchairs in this location."
                              },
                              "hasSpaceForAssistant": {
                                "type": "boolean",
                                "description": "Is there additional space for an assistant?"
                              },
                              "wheelchairUserCapacity": {
                                "type": "integer",
                                "description": "The number of people using a wheelchair that can be accomodated at the same time. Use this when there is no designated space for wheelchair users, but the number is known."
                              }
                            }
                          },
                          "latitude": {
                            "type": "number",
                            "description": "The location's latitude.",
                            "minimum": -90,
                            "maximum": 90
                          },
                          "longitude": {
                            "type": "number",
                            "description": "The location's longitude.",
                            "minimum": -180,
                            "maximum": 180
                          }
                        }
                      },
                      {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "The virtual location of an online or hybrid event",
                        "required": [
                          "@type"
                        ],
                        "properties": {
                          "@type": {
                            "type": "string",
                            "enum": [
                              "VirtualLocation"
                            ],
                            "description": "The type of this location object. Must be \"VirtualLocation\" for virtual locations."
                          },
                          "name": {
                            "type": "string",
                            "description": "The virtual location's name"
                          },
                          "url": {
                            "type": "string",
                            "format": "uri",
                            "description": "The event's URL, if this is an online or hybrid event"
                          }
                        }
                      }
                    ]
                  }
                },
                "performer": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "@type",
                      "performer"
                    ],
                    "properties": {
                      "@type": {
                        "type": "string",
                        "enum": [
                          "PerformanceRole"
                        ]
                      },
                      "characterName": {
                        "type": "string"
                      },
                      "performer": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": [
                          "@type",
                          "name"
                        ],
                        "properties": {
                          "@type": {
                            "type": "string",
                            "enum": [
                              "Person"
                            ]
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                },
                "offers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                      "@type",
                      "priceSpecification"
                    ],
                    "properties": {
                      "@type": {
                        "type": "string",
                        "enum": [
                          "Offer"
                        ]
                      },
                      "name": {
                        "type": "string",
                        "description": "A descriptive name for this offer, e.g. \"Normalpreis\", \"Ermäßigt\", \"Preisgruppe A\", usw."
                      },
                      "priceSpecification": {
                        "type": "object",
                        "required": [
                          "@type",
                          "minPrice",
                          "priceCurrency"
                        ],
                        "properties": {
                          "@type": {
                            "type": "string",
                            "enum": [
                              "PriceSpecification"
                            ]
                          },
                          "minPrice": {
                            "type": "number",
                            "description": "The minimum price of this offer.",
                            "format": "float",
                            "minimum": 0,
                            "maximum": 3.402823669209385E+38
                          },
                          "maxPrice": {
                            "type": "number",
                            "description": "The maximum price of this offer.",
                            "format": "float",
                            "minimum": 0,
                            "maximum": 3.402823669209385E+38
                          },
                          "priceCurrency": {
                            "type": "string",
                            "description": "The currency of the price. Use standard formats: TODO"
                          }
                        }
                      },
                      "url": {
                        "type": "string",
                        "description": "Ticketing link for this offer",
                        "format": "uri"
                      }
                    }
                  }
                },
                "eventStatus": {
                  "type": "string",
                  "description": "The status of this event.\n\n- `EventScheduled`: The event is taking place or has taken place on the `startDate` as scheduled. Use of this value is optional, as it is assumed by default.\n- `EventCancelled`: The event has been cancelled. Either `startDate` or `previousStartDate` may be used to specify the event's cancelled date(s).\n- `EventMovedOnline`: Indicates that the event was changed to allow online participation.\n- `EventPostponed`: The event has been postponed and no new date has been set. The event's `previousStartDate` should be set.\n- `EventRescheduled`: The event has been rescheduled. The event's `previousStartDate` should be set to the old date and the `startDate` should be set to the event's new date.",
                  "enum": [
                    "EventScheduled",
                    "EventCancelled",
                    "EventMovedOnline",
                    "EventPostponed",
                    "EventRescheduled"
                  ]
                },
                "previousStartDate": {
                  "type": "string",
                  "description": "This field should contain the old `startDate`, if the `eventStatus` is either `EventPostponed` or `EventRescheduled`",
                  "format": "date-time"
                }
              }
            }
          },
          "genre": {
            "type": "string",
            "description": "The genre of this production. Must use one of the pre-defined values.",
            "enum": [
              "audiowalk",
              "ballett",
              "digitaltheater",
              "figurentheater",
              "game-theater",
              "hoerspiel",
              "improtheater",
              "installation",
              "kabarett-comedy",
              "kammerkonzert",
              "konzert",
              "lecture-performance",
              "lesung",
              "musical",
              "musiktheater",
              "objekttheater",
              "oper",
              "operette",
              "performance",
              "physical-theatre",
              "podcast",
              "puppentheater",
              "sinfoniekonzert",
              "sprechtheater",
              "szenische-lesung",
              "szenisches-konzert",
              "tanz",
              "theater-im-oeffentlichen-raum",
              "workshop",
              "zeitgenoessischer-tanz"
            ]
          },
          "accessModeSufficient": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "A list of single or combined accessModes that are sufficient to understand all the intellectual content of a resource.",
              "enum": [
                "auditory",
                "tactile",
                "textual",
                "visual"
              ]
            }
          },
          "accessibilityHazard": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "none",
                "unknown",
                "flashingHazard",
                "motionSimulationHazard",
                "soundHazard",
                "noFlashingHazard",
                "noMotionSimulationHazard",
                "noSoundHazard",
                "unknownFlashingHazard",
                "unknownMotionSimulationHazard",
                "unknownSoundHazard"
              ]
            }
          },
          "accessibilitySummary": {
            "type": "string",
            "description": "A human-readable summary of specific accessibility features or deficiencies of the production."
          },
          "creator": {
            "description": "List of all people contributing to the creation of this production, e.g. directors, stage designers, musical directors, etc.\n\nIf multiple people perform the same role/function (e.g. there is multiple directors or multiple actors perform the same role on stage at the same time),\neach person should get their own entry in the `creator` array.",
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "required": [
                "@type",
                "creator"
              ],
              "properties": {
                "@type": {
                  "type": "string",
                  "enum": [
                    "Role"
                  ]
                },
                "creator": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "@type",
                    "name"
                  ],
                  "properties": {
                    "@type": {
                      "type": "string",
                      "enum": [
                        "Person"
                      ]
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "roleName": {
                  "type": "string",
                  "description": "The name of the role this person played in the creation of the production."
                }
              }
            }
          }
        }
      }
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#"
}
